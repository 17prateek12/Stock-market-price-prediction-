# -*- coding: utf-8 -*-
"""Stock_SVM4_tesla.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ei4kK2lX7wqWZDz_cG_reeafldnjPr7a
"""

#FB stock prediction
import pandas_datareader as pdr
from sklearn.svm import SVR
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt 
plt.style.use('fivethirtyeight')  # setting the style
from datetime import datetime as dt

key="f67c57eadb50e9ee8d3e84f8595cf9ff70922cbd"
df = pdr.get_data_tiingo('TSLA', start='2011-01-17', end=dt.now(),  api_key=key)
df.to_csv('TSLA.csv')
df=pd.read_csv('TSLA.csv')

# storing the data
df = pd.read_csv('TSLA.csv')
df               #used to the data 
# df.shape        # used to show no. of rows and cols

# taking out the last row for matching the prediction
actual_price = df.tail(1)
actual_price

ma100 = df.adjClose.rolling(100).mean()
ma200 = df.adjClose.rolling(200).mean()
ma100,ma200

#prepare data for training the SVR
df = df.head(len(df)-1)
df

#create empty list to store independent and dependent data
days = list()
adj_close_prices = list()
# open = list()
highs = list()
lows = list()
# close = list()



#get the dates and the adjusted close prices and high and low 
df_days = df.loc[:,'date']
df_adj_close = df.loc[:,'adjClose']
# df_open = df.loc[:,'Open']
df_high = df.loc[:,'high']
df_low = df.loc[:,'low']
# df_close = df.loc[:,'Close']

# Create the independent and dependent data set
# for day in df_days: 
#   days.append(int(day)) ####  (day) 
for i in range(0,len(df)): 
  days.append([i])


#create dependent data set

for adj_close_price in df_adj_close:
  adj_close_prices.append(float(adj_close_price))

for high in df_high:
  highs.append(float(high))


for low in df_low:
  lows.append(float(low))

#printing the day and the adj close prices 

print(days)
print (adj_close_prices)
print (highs)
print (lows)

# 3rbf kernel
rbf_svr = SVR(kernel='rbf', C=100000.0,degree = 2)
rbf_svr1 = SVR(kernel='rbf', C=100000.0,degree = 2)
rbf_svr2 = SVR(kernel='rbf', C=100000.0,degree = 2)
rbf_svr.fit(days,adj_close_prices)
rbf_svr1.fit(days,highs)
rbf_svr2.fit(days,lows)

#plot the models 
plt.figure(figsize=(16,8))
plt.scatter(days,adj_close_prices,color = 'red',label = 'Data')
plt.plot(days,rbf_svr.predict(days),color = 'blue',label = 'RBF Model')

plt.legend()
plt.show()

#plot the models 
plt.figure(figsize=(16,8))
plt.scatter(days,highs,color = 'black',label = 'Data')
plt.plot(days,rbf_svr1.predict(days),color = 'green',label = 'RBF Model for High')

plt.legend()
plt.show()

#plot the models 
plt.figure(figsize=(16,8))
plt.scatter(days,lows,color = 'black',label = 'Data')
plt.plot(days,rbf_svr2.predict(days),color = 'red',label = 'RBF Model for Low')

plt.legend()
plt.show()

#show the predicted price for the given day
day = [[len(df)]]
prid = rbf_svr.predict(day)
print('The RBF SVR predicted ; ', rbf_svr.predict(day))

#print the actual price
print('The actual price: ', actual_price['adjClose'][len(df)])

#show the predicted price for the given day
#let the day be 10/12/21
day = [[len(df)]]
prid1 = rbf_svr1.predict(day)
print('The RBF SVR predicted ; ', rbf_svr1.predict(day))

#print the actual price
print('The actual price: ', actual_price['high'][len(df)])

#show the predicted price for the given day

day = [[len(df)]]
prid2 = rbf_svr2.predict(day)
print('The RBF SVR predicted ; ', rbf_svr2.predict(day))

#print the actual price
print('The actual price: ', actual_price['low'][len(df)])

def acc(x,y):
  a = x-y
  if a<0:
    a= (-a)
  a= (a/x)*100
  a = 100-a
  print("the accuracy of the model is :" )
  print(a)

import math
def RMSE(x,y):
  a = x-y
  a= a**2
  b = math.sqrt(a)
  # print("RMSE is :")
  # print(b)

x = actual_price['adjClose'][len(df)]
y = int(prid)
x1 = actual_price['high'][len(df)]
y1 = int(prid1)
x2 = actual_price['low'][len(df)]
y2 = int(prid2)
acc(x,y)
RMSE(x,y)
acc(x1,y1)
RMSE(x1,y1)
acc(x2,y2)
RMSE(x2,y2)

"""AdjClose
1.   The actual price:  122.4
2.   The RBF SVR predicted :  111.54818098 
3.   The accuracy of the model is : 89.05228758169935

High
1.   The RBF SVR predicted : 126.97796888
2.   The actual price: 122.63
3.   The accuracy of the model is : 97.25189594715812

Low
1.   The RBF SVR predicted :  119.47112921
2.   The actual price:  115.6
3.   The accuracy of the model is : 97.05882352941175

These accuracy is for data of TESLA from 2018-01-17 to 2023-01-13

AdjClose


1.   The actual price: 122.4
2.   The RBF SVR predicted : 137.36054329
3.   The accuracy of the model is : 88.07189542483661

High


1.   The RBF SVR predicted : 2.88604824
2.   The actual price: 122.63
3.   The accuracy of the model is : 1.6309222865530444 

Low


1.   The RBF SVR predicted : 6.15993094
2.   The actual price: 115.6
3.   The accuracy of the model is : 5.190311418685127

These accuracy is for data of TESLA from 2011-01-18 to 2023-01-13
"""